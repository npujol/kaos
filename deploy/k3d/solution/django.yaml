apiVersion: v1
kind: Service
metadata:
  name: django
  labels:
    app: django
spec:
  ports:
    - port: 8000
  selector:
    app: django
    tier: app
  type: LoadBalancer
---
# This defines the persistent volume claim for the django app.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: django-app-pvc
  labels:
    app: django
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# This defines the deployment for the django app.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    app: django
spec:
  selector:
    matchLabels:
      app: django
      tier: app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: django
        tier: app
    spec:
      volumes:
        - name: django-app-data
          persistentVolumeClaim:
            claimName: django-app-pvc
      containers:
        - image: django-app:latest
          imagePullPolicy: Never
          name: app
          resources:
            limits:
              cpu: "0.5"
              memory: 512Mi
            requests:
              cpu: "0.1"
              memory: 256Mi
          volumeMounts:
            - name: django-app-data
              mountPath: /vol/web
          env:
            - name: DB_URL
              value: psql://postgres:postgres@django-postgres:5432/ankidb
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: secret
        - image: django-proxy:latest
          imagePullPolicy: Never
          name: proxy
          resources:
            limits:
              cpu: "0.5"
              memory: 512Mi
            requests:
              cpu: "0.1"
              memory: 256Mi
          ports:
            - containerPort: 8000
              name: proxy
          volumeMounts:
            - name: django-app-data
              mountPath: /vol/web
          env:
            - name: APP_HOST
              value: '127.0.0.1'
            - name: APP_PORT
              value: '8080'
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: django
                port:
                  number: 8000
